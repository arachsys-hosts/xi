System info
===========

xi is an ASRock 4X4 BOX 4800U, with an 8-core AMD Ryzen 7 4800U, integrated
AMD Renoir GPU, 32G RAM, dual Realtek r8169 NICs, Intel AX200 wifi and
a 932G NVMe SSD.

The SSD is GPT partitioned with a 512M vfat /boot, and the kernel is booted
directly from /boot/efi/boot/bootx64.efi by the UEFI BIOS. The command line

  loglevel=2 root=PARTLABEL=root tsc=reliable

is compiled into the kernel to avoid the need for a manually-configured
UEFI boot entry.

We use an ext4 root filesystem, with 1G zram swap to limit SSD wear.
A ueventd disable rule works around a hardware/BIOS bug with a phantom
USB device which fails to enumerate.


Upstream firmware binaries
--------------------------

The CPU microcode firmware/amd-ucode/*.bin, GPU blobs firmware/amdgpu/*.bin
and Intel AX200 wifi firmware firmware/iwlwifi-*.ucode are obtained from

  https://git.kernel.org/pub/scm/linux/kernel/git/firmware/linux-firmware.git

The firmware/regulatory.db database is obtained from

  https://git.kernel.org/pub/scm/linux/kernel/git/sforshee/wireless-regdb.git

The firmware/bios/ directory contains a flash image for the deployed version
of the manufacturer's UEFI BIOS.


Partitioning and filesystems
----------------------------

Create the GPT label and partitions:

  sfdisk /dev/nvme0n1 <<< 'label: gpt'
  sfdisk -a /dev/nvme0n1 <<< 'size=512M, type=uefi, name=boot'
  sfdisk -a /dev/nvme0n1 <<< 'size=+, type=linux, name=root'

Make the EFI and root filesystems:

  mkfs.vfat -n boot /dev/nvme0n1p1
  mkfs.ext4 -L root -O project,quota /dev/nvme0n1p2

Copy the kernel from linux/arch/x86/boot/bzImage to both /boot/linux.efi
and /boot/efi/boot/bootx64.efi so the BIOS will use it as the default
bootloader for the drive.
